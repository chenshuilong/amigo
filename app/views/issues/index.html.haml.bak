.contextual
  - if User.current.allowed_to?(:add_issues, @project, :global => true) && (@project.nil? || Issue.allowed_target_trackers(@project).any?)
    = link_to l(:label_issue_new), _new_project_issue_path(@project), :class => 'icon icon-add new-issue'
%h2= @query.new_record? ? l(:label_issue_plural) : @query.name
- html_title(@query.new_record? ? l(:label_issue_plural) : @query.name)
= form_tag({ :controller => 'issues', :action => 'index', :project_id => @project }, |
  :method => :get, :id => 'query_form') do                                           |
  #query_form_with_buttons.hide-when-print
    = hidden_field_tag 'set_filter', '1'
    #query_form_content
      %fieldset#filters{:class => "collapsible #{@query.new_record? ? "" : "collapsed"}"}
        %legend{:onclick => "toggleFieldset(this);"}= l(:label_filter_plural)
        %div{:style => "#{@query.new_record? ? "" : "display: none;"}"}
          = render :partial => 'queries/filters', :locals => {:query => @query}
      %fieldset#options.collapsible.collapsed
        %legend{:onclick => "toggleFieldset(this);"}= l(:label_options)
        %div{:style => "display: none;"}
          %table
            %tr
              %td.field= l(:field_column_names)
              %td= render_query_columns_selection(@query)
            %tr
              %td.field
                %label{:for => "group_by"}= l(:field_group_by)
              %td= select_tag('group_by',
                          options_for_select([[]] + @query.groupable_columns.collect {|c| [c.caption, c.name.to_s]},
                            @query.group_by))
            %tr
              %td.field= l(:button_show)
              %td= available_block_columns_tags(@query)
            %tr
              %td= l(:label_total_plural)
              %td= available_totalable_columns_tags(@query)
    %p.buttons
      = link_to_function l(:button_apply), '$("#query_form").submit()', :class => 'icon icon-checked'
      = link_to l(:button_clear), { :set_filter => 1, :project_id => @project }, :class => 'icon icon-reload'
      - if @query.new_record?
        - if User.current.allowed_to?(:save_queries, @project, :global => true)
          = link_to_function l(:button_save),                                                                                |
            "$('#query_form').attr('action', '#{ @project ? new_project_query_path(@project) : new_query_path }').submit()", |
            :class => 'icon icon-save'                                                                                       |
      - else
        - if @query.editable_by?(User.current)
          = link_to l(:button_edit), edit_query_path(@query), :class => 'icon icon-edit'
          = delete_link query_path(@query)
= error_messages_for 'query'
- if @query.valid?
  - if @issues.empty?
    %p.nodata= l(:label_no_data)
  - else
    = render_query_totals(@query)
    = render :partial => 'issues/list', :locals => {:issues => @issues, :query => @query}
    %span.pagination= pagination_links_full @issue_pages, @issue_count
  - other_formats_links do |f|
    = f.link_to 'Atom', :url => params.merge(:key => User.current.rss_key)
    = f.link_to 'CSV', :url => params, :onclick => "showModal('csv-export-options', '350px'); return false;"
    = f.link_to 'PDF', :url => params
  #csv-export-options{:style => "display:none;"}
    %h3.title= l(:label_export_options, :export_format => 'CSV')
    = form_tag(_project_issues_path(@project, :format => 'csv'), :method => :get, :id => 'csv-export-form') do
      = query_as_hidden_field_tags(@query)
      = hidden_field_tag 'sort', @sort_criteria.to_param, :id => nil
      %p
        %label
          = radio_button_tag 'csv[columns]', '', true
          = l(:description_selected_columns)
        %br/
        %label
          = radio_button_tag 'csv[columns]', 'all'
          = l(:description_all_columns)
      %p
        %label
          = check_box_tag 'csv[description]', '1', @query.has_column?(:description)
          = l(:field_description)
      - if @issue_count > Setting.issues_export_limit.to_i
        %p.icon.icon-warning
          = l(:setting_issues_export_limit)
          \: #{Setting.issues_export_limit.to_i}
      %p.buttons
        = submit_tag l(:button_export), :name => nil, :onclick => "hideModal(this);"
        = submit_tag l(:button_cancel), :name => nil, :onclick => "hideModal(this);", :type => 'button'
= call_hook(:view_issues_index_bottom, { :issues => @issues, :project => @project, :query => @query })
- content_for :sidebar do
  = render :partial => 'issues/sidebar'
- content_for :header_tags do
  = auto_discovery_link_tag(:atom,
    {:query_id => @query, :format => 'atom',
     :page => nil, :key => User.current.rss_key},
    :title => l(:label_issue_plural))
  = auto_discovery_link_tag(:atom,
    {:controller => 'journals', :action => 'index',
     :query_id => @query, :format => 'atom',
     :page => nil, :key => User.current.rss_key},
    :title => l(:label_changes_details))
= context_menu issues_context_menu_path

- if @repeat_name.present?
  .warning
    发现以下重名：
    - @repeat_name.pluck(:firstname).each do |name|
      = link_to name, url_for(:name => name)

.contextual
  = link_to l(:label_user_new), new_user_path, :class => 'icon icon-add'
  = link_to "新建UAAM用户", uaam_users_path, :class => 'icon icon-add'
  = link_to "导入用户", import_users_path, :class => 'icon icon-add'
%h2= l(:label_user_plural)
= form_tag(users_path, :method => :get) do
  %fieldset
    %legend= l(:label_filter_plural)
    %label{:for => "status"}
      = l(:field_status)
      \:
    = select_tag 'status', users_status_options_for_select(@status), :class => "small", :onchange => "this.form.submit(); return false;"
    - if @groups.present?
      %label{:for => "group_id"}
        = l(:label_group)
        \:
      = select_tag 'group_id', content_tag('option') + options_from_collection_for_select(@groups, :id, :name, params[:group_id].to_i), :onchange => "this.form.submit(); return false;"
    %label{:for => "name"}
      = l(:label_user)
      \:
    = text_field_tag 'name', params[:name], :size => 30
    = submit_tag l(:button_apply), :class => "small", :name => nil
    = link_to l(:button_clear), users_path, :class => 'icon icon-reload'
 
.autoscroll
  %table.list.table.table-striped.table-bordered
    %thead
      %tr
        = sort_header_tag('login', :caption => l(:field_login))
        = sort_header_tag('lastname', :caption => l(:field_name))
        %th= l(:field_mail)
        = sort_header_tag('orgNm', :caption => l(:field_dept), :default_order => 'desc')
        = sort_header_tag('admin', :caption => l(:field_admin), :default_order => 'desc')
        = sort_header_tag('created_on', :caption => l(:field_created_on), :default_order => 'desc')
        = sort_header_tag('last_login_on', :caption => l(:field_last_login_on), :default_order => 'desc')
        %th
    %tbody
      - for user in @users
        %tr{:class => "#{user.css_classes} #{cycle("odd", "even")}"}
          %td.username
            = avatar(user, :size => "14")
            = link_to user.login, edit_user_path(user)
          %td.lastname= user.name
          %td.email= mail_to(user.mail)
          %td.dept= user.dept.try(:orgNm)
          %td.tick= checked_image user.admin?
          %td.created_on= format_time(user.created_on)
          %td.last_login_on= format_time(user.last_login_on) unless user.last_login_on.nil?
          %td.buttons
            = change_status_link(user)
            = delete_link user_path(user, :back_url => request.original_fullpath) unless User.current == user
%span.pagination= pagination_links_full @user_pages, @user_count
- html_title(l(:label_user_plural))

= error_messages_for 'time_entry'
= back_url_hidden_field_tag
.box.tabular
  - if @time_entry.new_record?
    - if params[:project_id]
      = hidden_field_tag 'project_id', params[:project_id]
    - elsif params[:issue_id]
      = hidden_field_tag 'issue_id', params[:issue_id]
    - else
      %p= f.select :project_id, project_tree_options_for_select(Project.allowed_to(:log_time).to_a, :selected => @time_entry.project, :include_blank => true)
  %p
    = f.text_field :issue_id, :size => 6
    - if @time_entry.issue.try(:visible?)
      %span#time_entry_issue= "#{@time_entry.issue.tracker.name} ##{@time_entry.issue.id}: #{@time_entry.issue.subject}"
  %p
    = f.date_field :spent_on, :size => 10, :required => true
    = calendar_for('time_entry_spent_on')
  %p= f.text_field :hours, :size => 6, :required => true
  %p= f.text_field :comments, :size => 100, :maxlength => 1024
  %p= f.select :activity_id, activity_collection_for_select_options(@time_entry), :required => true
  - @time_entry.custom_field_values.each do |value|
    %p= custom_field_tag_with_label :time_entry, value
  = call_hook(:view_timelog_edit_form_bottom, { :time_entry => @time_entry, :form => f })
= javascript_tag do
  - if @time_entry.new_record?
    $(document).ready(function(){
    $('#time_entry_project_id, #time_entry_issue_id').change(function(){
    $.ajax({
    url: '#{escape_javascript new_time_entry_path(:format => 'js')}',
    type: 'post',
    data: $('#new_time_entry').serialize()
    });
    });
    });
  observeAutocompleteField('time_entry_issue_id', '#{escape_javascript auto_complete_issues_path(:project_id => @project, :scope => (@project ? nil : 'all'))}', {
  select: function(event, ui) {
  $('#time_entry_issue').text(ui.item.label);
  $('#time_entry_issue_id').blur();
  }
  });

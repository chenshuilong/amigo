- provide :nav, (@project.show_by(4)? "4,1" : "2,1")
- provide :css, "bootstrap"

= board_breadcrumb(@message)
.top-action-menu.pull-right
  = watcher_link(@topic, User.current)
  = link_to(                                                                  |
    l(:button_quote),                                                         |
    {:action => 'quote', :id => @topic},                                      |
    :method => 'get',                                                         |
    :class => 'icon icon-comment',                                            |
    :remote => true) if !@topic.locked? && authorize_for('messages', 'reply') |
  -#
  = link_to(                                 |
      l(:button_edit),                       |
      {:action => 'edit', :id => @topic},    |
      :class => 'icon icon-edit'             |
    ) if @message.editable_by?(User.current) |
  -#
  = link_to(                                       |
     l(:button_delete),                            |
     {:action => 'destroy', :id => @topic},        |
     :method => :post,                             |
     :data => {:confirm => l(:text_are_you_sure)}, |
     :class => 'icon icon-del'                     |
    ) if @message.destroyable_by?(User.current)    |

.clearfix
.message-section
  .message-section-subject
    %h4= @topic.subject
  .message-section-message
    .message-section-message-author
      %span.word-avatar
        .avatar= @topic.author.picture?? avatar(@topic.author, :size => 80) : @topic.author.name.last
      = link_to_user @topic.author
    .message-section-message-content
      .wiki-and-attachment
        .wiki
          = textilizable(@topic, :content)
        = link_to_attachments @topic, :author => false
      .floor
        = l(:notice_floor, :floor => 1)
        = format_time(@topic.created_on)

  - unless @replies.empty?
    - @replies.each do |message|
      .message-section-message.reply{:id => "message-#{message.id}"}
        .message-section-message-author
          %span.word-avatar
            .avatar= message.author.picture?? avatar(message.author, :size => 80) : message.author.name.last
          = link_to_user message.author
        .message-section-message-content
          .wiki-and-attachment
            .wiki
              = textilizable(message, :content)
            = link_to_attachments message, :author => false
          .floor
            = l(:notice_floor, :floor => message.floor_of(@topic))
            = format_time(message.created_on)

        -# .contextual
        -#   = link_to(                                                   |
        -#       '',                                                      |
        -#       {:action => 'quote', :id => message},                    |
        -#       :remote => true,                                         |
        -#       :method => 'get',                                        |
        -#       :title => l(:button_quote),                              |
        -#       :class => 'icon icon-comment'                            |
        -#     ) if !@topic.locked? && authorize_for('messages', 'reply') |
        -#   -#
        -#   = link_to(                                |
        -#       '',                                   |
        -#       {:action => 'edit', :id => message},  |
        -#       :title => l(:button_edit),            |
        -#       :class => 'icon icon-edit'            |
        -#     ) if message.editable_by?(User.current) |
        -#   -#
        -#   = link_to(                                        |
        -#       '',                                           |
        -#       {:action => 'destroy', :id => message},       |
        -#       :method => :post,                             |
        -#       :data => {:confirm => l(:text_are_you_sure)}, |
        -#       :title => l(:button_delete),                  |
        -#       :class => 'icon icon-del'                     |
        -#     ) if message.destroyable_by?(User.current)      |


        -# %h4
        -#   = avatar(message.author, :size => "24")
        -#   = link_to message.subject, { :controller => 'messages', :action => 'show', :board_id => @board, :id => @topic, :r => message, :anchor => "message-#{message.id}" }
        -#   \-
        -#   \#{authoring message.created_on, message.author}
        -# .wiki= textilizable message, :content, :attachments => message.attachments
        -# = link_to_attachments message, :author => false

  .message-pagination
    %span.pagination= pagination_links_full @reply_pages, @reply_count, :per_page_links => false
    %span #{l(:label_reply_plural)}(#{@reply_count})

- if !@topic.locked? && authorize_for('messages', 'reply')
  .reply-section
    %h4= l(:button_reply)
    #reply
      = form_for @reply, :as => :reply, :url => {:action => 'reply', :id => @topic}, :html => {:multipart => true, :id => 'message-form'} do |f|
        = render :partial => 'form', :locals => {:f => f, :replying => true}
        = submit_tag l(:button_submit), class: "btn btn-primary"

- html_title @topic.subject



